// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  directUrl = env("DATABASE_URL_UNPOOLED")
}

//data expected in our table
model Employee {
  id  Int @id @default(autoincrement())
  password String 
  firstName String
  lastName String
  email String @unique
  role  Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders Order[]
}

enum Role {
  INTERN
  ENGINEER
  ADMIN
}

model Product {
  id  Int @id @default(autoincrement())
  code String
  name String
  price Int
  quantity Int
  description String
  catId Int
  category Category @relation(fields: [catId], references: [id])
  inventoryStatus InventoryStatus
  orders OrderProduct[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum InventoryStatus {
  INSTOCK
  LOWSTOCK
  OUTOFSTOCK
}

model Category {
  id  Int @id @default(autoincrement())
  name String
  icon String
  color String
  products Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id        Int              @id @default(autoincrement())
  date      DateTime         @default(now())
  products  OrderProduct[]
  amount    Int
  quantity  Int
  customer  Employee?        @relation(fields: [customerId], references: [id])
  customerId Int?
  status    OrderStatus
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
}

model OrderProduct {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  product   Product @relation(fields: [productId], references: [id])
  order     Order   @relation(fields: [orderId], references: [id])
}

enum OrderStatus {
  PENDING
  DELIVERED
  RETURNED
  CANCELLED
}